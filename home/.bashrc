## AUTOGENERATED BASHRC CONFIG:
##  This ~/.bashrc file was automatically generated by a Fish (yeah the
##  Fish shell) function, it has some of the same aliases and variables
##  that this particular Fish config has!
##
##  More information at: http://github.com/kevinmarquesp
export BAT_THEME="Nord"
export FZF_DEFAULT_COMMAND='find . -type f -not -path "*/node_modules/*" -not -path "*/.git/*" | sed "s/^\.\///"'
export VIRTUAL_ENV_DISABLE_PROMPT=1
export FLYCTL_INSTALL="$HOME/.fly"
export EDITOR="vim"
export PNPM_HOME="$HOME/.local/share/pnpm"
export PATH="$PATH:/bin:/usr/bin:/usr/local/bin"
export PATH="$PATH:$HOME/.local/bin"
export PATH="$PATH:$PNPM_HOME"
export PATH="$PATH:$HOME/go/bin"
export PATH="$PATH:/usr/bin/vendor_perl"
export PATH="$PATH:$HOME/.tmux/plugins/tmuxifier/bin"
export PATH="$PATH:$HOME/.config/emacs/bin"
export PATH="$PATH:$FLYCTL_INSTALL/bin"
export PATH="$PATH:$HOME/.nix-profile/bin"
export ERL_MAX_PORTS="1024"
alias r='rm -rf'
alias n='nvim'
alias v='vim'
alias e='exit'
alias f='ranger'
alias t='tmux'
alias ct='mkdir /tmp/tmp.kevin; cd /tmp/tmp.kevin'
alias md='mkdir -vp'
alias cp='cp -r'
alias ..="cd .."
alias ...="cd ../.."
alias g='git'
alias gac='git commit --amfi -m $(git log -1 --format="%s")'
alias gaac='git add :; git commit --amfi -m $(git log -1 --format="%s")'
alias grep='grep --colour=auto'
alias bat='batcat'
alias tree='tree --dirsfirst -aF -I .git -I node_modules -I target -I .mypy_cache -I __pycache__ -I .venv'
alias ll="ls -lhA --color=auto"
alias l="ls -lh --color=auto"
alias tf='tmuxifier'
alias py='python3'
alias pip='python3 -m pip'
alias pyserver='python3 -m http.server 8080'
alias ard-comp='arduino-cli compile -u -b arduino:avr:uno -p /dev/ttyUSB0'
alias ard-ls='arduino-cli board list'
alias ard-install='arduino-cli lib install'
alias ard-uninstall='arduino-cli lib uninstall'
alias ard-new='arduino-cli sketch new'
alias fzf="fzf --border sharp --margin 5% --info inline --prompt 'SEARCH: ' --pointer '**' --ansi --color 'bg+:-1,pointer:green,fg+:green,hl:yellow,border:gray'"
alias exe='chmod +x'
alias vf='vim $(fzf)'
alias nf='nvim $(fzf)'
alias bf='bat $(fzf)'
if grep -q 'ID=arch' /etc/os-release; then
	alias update='sudo pacman -Syyuu'
	alias uninstall='sudo pacman -Rns'
	alias install='yay -S'
	alias orphans='sudo pacman -Rns $(pacman -Qtdq)'
else
	alias update='sudo apt update && sudo apt upgrade'
	alias uninstall='sudo apt purge --autoremove'
	alias install='sudo apt install --no-install-recommfis'
	alias orphans='sudo apt autoremove'
fi
clr_rd=$'\001'$(tput setaf 1 2>/dev/null || echo $'\e[31m')$'\002'
clr_gr=$'\001'$(tput setaf 2 2>/dev/null || echo $'\e[32m')$'\002'
clr_bl=$'\001'$(tput setaf 4 2>/dev/null || echo $'\e[34m')$'\002'
clr_re=$'\001'$(tput sgr 0 2>/dev/null || echo $'\e[0m')$'\002'
function dereference_gi {
	local sha1
	sha1=$(git rev-parse --short HEAD 2>&1)
	if [ $? -eq 0 ]; then
		local clr_symref=$clr_gr
		local clr_ref=$clr_bl
		local dirty=$(git status --porcelain 2>&1)
		if [ ! -z "$dirty" ]; then
			clr_symref=$clr_rd
			clr_ref=$clr_rd
			dirty='*'
		fi
		GIT_HE="$clr_symref($(git symbolic-ref --quiet --short HEAD)$dirty)$clr_re "
		if [ $? -ne 0 ]; then
			GIT_HE="$clr_ref[$sha1$dirty]$clr_re"
		fi
	else
		GIT_HE=""
	fi
}
PROMPT_CO="dereference_gi; $PROMPT_CO"
if [ $USER = "root" ]; then
	PS1="${clr_rd}[\u@\h] ${clr_re}\W ${GIT_HE}${clr_rd}# ${clr_re}"
else
	PS1="${clr_gr}[\u@\h] ${clr_re}\W ${GIT_HE}${clr_gr}\$ ${clr_re}"
fi
